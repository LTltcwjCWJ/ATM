#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>

struct Transaction
{
  char username[100];
  time_t timestamp;
  int type;//0-取款  1-存款
  int amount;//数额
  
  struct Transaction*next;
}；
typedef struct Transaction Transaction;

Transaction*tHead=NULL;
Transaction*tTail=NULL;

struct Account
{
  char username[100];
  char password[100];
  
  int money;
  
  struct Account*next;
};
typedef struct Account Account;

Account*head=NULL;//指向头结点的指针
Account*tail=NULL;//指向尾结点的指针
Account*curAccount=NULL;//指向当前登录账户的指针


//找到返回1，否则返回0
int findAccount(Account a)
{
  Account*curP=head;
  while(curP!=NULL)
  {
    if((strcmp(curP->username,a.username)==0)&&(strcmp(curP->password,a.password)==0))
    {
      curAccount=curP;
      return 1;
    }
    curP=curP->next;
  }
  return 0;
}

int loadData()
{
  FILE*fp=fopen("D:/atm.txt","r");
  if(fp==NULL)
  {
    return 0;
  }
  else
  {
    while(!feof(fp))
    {
      //创建结点，在堆上申请一块内存空间，将其地址赋值给指针newNode
      Account * newNode=(Account *)malloc(sizeof(Account));
      
      //结点赋值，结点初始化
      newNode->next=NULL;
      fascanf(fp,"%s %s %d\n",newNode->username,newNode->password,&newNode->money);
      
      //添加结点到列表
      if(head==NULL)
      {
        head=newNode;
        tail=newNode;
      }
      else
      {
      tail->next=newNode;
      tail=newNode;
      }
    }
    return 1;
  }
}


void saveTransaction()
{
  FILE*fp=fopen("D:/transaction.text","w");
  if(fp!=NULL)
  {
    Transaction*curp=tHead;
    while(curp!=NULL)
    {
      fprintf(fp,"%s %ld %d %d\n",curp->username,curp->timestamp,curp->type,curp->amount);
      curp=curp->next;
    }
    fclose(fp);
  }
}


int main()
{
  int staus=loadData();
  //loadTransaction();
  if(status==1)
  {
    printf("加载成功!\n");
  }
  else
  {
    printf("加载失败!\n");
  }
  signIn();
  
  //saveData();
  saveTransaction();
  
  return 0
}
